#github actions config
name: flask-app
run-name: ${{ github.actor }}s flask app

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZ_CRED1 }}

      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # # - name: Test with pytest
      # #   run: |
      # #     pytest

      - name: set Kube context
        run: az aks get-credentials --resource-group flask-portfolio-project --name k8-cluster-flask 

      - name: call db backup script
        continue-on-error: true
        run: bash ${GITHUB_WORKSPACE}/dump-db.sh

      - name: delete old flask
        continue-on-error: true
        run: kubectl delete deployment flask-app

      - name: delete old pg
        continue-on-error: true
        run: kubectl delete deployment pg

      - name: delete old pgadmin
        continue-on-error: true
        run: kubectl delete deployment pgadmin

      - name: create persistent storage deployment
        continue-on-error: true
        run: kubectl create -f C-persistentvolumeclaim.yaml

      - name: create flask-app deployment
        continue-on-error: true
        run: kubectl create -f flask-app-deployment.yaml

      - name: create pg-deployment deployment
        continue-on-error: true
        run: kubectl create -f pg-deployment.yaml

      - name: create pgadmin deployments
        continue-on-error: true
        run: kubectl create -f pgadmin-deployment.yaml

      - name: Expose ports
        continue-on-error: true
        run: kubectl expose deployment/flask-app --type="LoadBalancer" --port 5000
      - name: Expose ports
        continue-on-error: true
        run: kubectl expose deployment/pg --type="NodePort" --port 5432

      - name: Expose ports
        continue-on-error: true
        run: kubectl expose deployment/pgadmin --type="LoadBalancer" --port 5433

      - name: discover pods
        run: echo "kubectl get pods"

      - name: call db recovery script
        continue-on-error: true
        run: bash ${GITHUB_WORKSPACE}/recover-db.sh

